/*************************************************************************
【文件名】Element3D.cpp
【功能模块和目的】定义Element3D类的成员函数
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/

// Element3D所属头文件
#include "Element3D.hpp"
// Point3D所属头文件
#include "Point3D.hpp"
// initializer_list所属头文件
#include <initializer_list>
// 流操作所属头文件
#include <iostream>
// vector所属头文件
#include <vector>   
// vector操作所属头文件
#include <algorithm>
#include <functional>
// 异常类所属头文件
#include <stdexcept>
// string所属头文件
#include <string>
// size_t所属头文件
#include <cstddef>
// numeric_limits所属头文件
#include <limits>

using namespace std;

//-------------------------------------------------------------------------
// 必要的构造、析构、拷贝、赋值运算符重载函数
//-------------------------------------------------------------------------

/*************************************************************************
【函数名称】Element3D
【函数功能】默认构造函数，用于初始化Element3D类的对象
【参数】无
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
Element3D::Element3D(size_t MaxPointCount) : m_Points(MaxPointCount) {
}
/*************************************************************************
【函数名称】Element3D
【函数功能】带参构造函数，用于初始化Element3D类的对象
【参数】initializer_list<Point3D> List, 表示Point3D类的对象的列表
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
Element3D::Element3D(initializer_list<Point3D> List, size_t MaxPointCount)
    : m_Points(List, MaxPointCount) {
    }
/*************************************************************************
【函数名称】Element3D
【函数功能】拷贝构造函数，用于初始化Element3D类的对象
【参数】const Element3D& Source, 表示另一个Element3D类的对象
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
Element3D::Element3D(const Element3D& Source) : m_Points(Source.m_Points) {
}
/*************************************************************************
【函数名称】operator=
【函数功能】重载赋值运算符，用于将一个Element3D类的对象赋值给另一个Element3D类的对象
【参数】const Element3D& Source, 表示另一个Element3D类的对象
【返回值】Element3D类的对象的引用
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
Element3D& Element3D::operator=(const Element3D& Source) {
    if (this != &Source) {
        m_Points = Source.m_Points;
    }
    return *this;
}

//-------------------------------------------------------------------------
// 非静态Getter成员函数
//-------------------------------------------------------------------------

/*************************************************************************
【函数名称】CountPoint const
【函数功能】获取Element3D类的点数
【参数】无
【返回值】size_t类型，表示Element3D类的点数
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
size_t Element3D::CountPoint() const {
    return FixedCountPoint();
}
/*************************************************************************
【函数名称】operator== const
【函数功能】重载==运算符，用于判断两个Element3D类的对象是否相等
【参数】const Element3D& AElement, 表示另一个Element3D类的对象
【返回值】bool类型，表示两个Element3D类的对象是否相等
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
bool Element3D::operator==(const Element3D& AElement) const {
    return m_Points == AElement.m_Points;
}
/*************************************************************************
【函数名称】operator!= const
【函数功能】重载!=运算符，用于判断两个Element3D类的对象是否不相等
【参数】const Element3D& AElement, 表示另一个Element3D类的对象
【返回值】bool类型，表示两个Element3D类的对象是否不相等
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
bool Element3D::operator!=(const Element3D& AElement) const {
    return m_Points != AElement.m_Points;
}

//-------------------------------------------------------------------------
// 非静态Setter成员函数
//-------------------------------------------------------------------------

/*************************************************************************
【函数名称】AddPoint
【函数功能】调用FixedAddPoint, 按照派生类的规则向点集合中添加点
【参数】const Point3D& APoint, 表示Point3D类的对象
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::AddPoint(const Point3D& APoint) {
    FixedAddPoint(APoint);
}
/*************************************************************************
【函数名称】RemovePoint
【函数功能】调用FixedRemovePoint, 按照派生类的规则删除点集合中的某个位置的点
【参数】size_t Index, 表示点的位置
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::RemovePoint(size_t Index) {
    FixedRemovePoint(Index);
}
/*************************************************************************
【函数名称】RemovePoint
【函数功能】调用FixedRemovePoint, 按照派生类的规则删除点集合中的某个点
【参数】const Point3D& APoint, 表示Point3D类的对象
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::RemovePoint(const Point3D& APoint) {
    FixedRemovePoint(APoint);
}
/*************************************************************************
【函数名称】ChangePoint
【函数功能】调用FixedChangePoint, 按照派生类的规则修改点集合中的某个点到另一个点
【参数】const Point3D& From, 表示原来的Point3D类的对象
       const Point3D& To, 表示新的Point3D类的对象
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::ChangePoint(const Point3D& From, const Point3D& To) {
    size_t Index = m_Points.Search(From);
    FixedChangePoint(To, Index);
}
/*************************************************************************
【函数名称】ChangePoint
【函数功能】调用FixedChangePoint, 按照派生类的规则修改点集合中的某个点到另一个点
【参数】const Point3D& APoint, 表示改后的Point3D类的对象
       size_t Index, 表示原来点的位置
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::ChangePoint(const Point3D& APoint, size_t Index) {
    FixedChangePoint(APoint, Index);
}
/*************************************************************************
【函数名称】ClearPoint
【函数功能】调用FixedClearPoint, 按照派生类的规则清空点集合
【参数】无
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::ClearPoint() {
    FixedClearPoint();
}

//-------------------------------------------------------------------------
// 受保护的非静态成员函数
//-------------------------------------------------------------------------

/*************************************************************************
【函数名称】FixedAddPoint
【函数功能】向点集合中添加点（无规则）
【参数】const Point3D& APoint, 表示Point3D类的对象
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::FixedAddPoint(const Point3D& APoint) {
    m_Points.Add(APoint);
}
/*************************************************************************
【函数名称】FixedRemovePoint
【函数功能】删除指定位置的点（无规则）
【参数】size_t Index, 表示点的位置
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::FixedRemovePoint(size_t Index) {
    m_Points.Remove(Index);
}
/*************************************************************************
【函数名称】FixedRemovePoint
【函数功能】删除指定的点（无规则）
【参数】const Point3D& APoint, 表示Point3D类的对象
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::FixedRemovePoint(const Point3D& APoint) {
    m_Points.Remove(APoint);
}
/*************************************************************************
【函数名称】FixedChangePoint
【函数功能】修改指定位置的点（无规则）
【参数】const Point3D& APoint, 表示Point3D类的对象
       size_t Index, 表示点的位置
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::FixedChangePoint(const Point3D& APoint, size_t Index) {
    m_Points.Change(APoint, Index);
}
/*************************************************************************
【函数名称】FixedChangePoint
【函数功能】修改指定的点（无规则）
【参数】const Point3D& From, 表示原来的Point3D类的对象
       const Point3D& To, 表示新的Point3D类的对象
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::FixedChangePoint(const Point3D& From, const Point3D& To) {
    size_t Index = m_Points.Search(From);
    m_Points.Change(To, Index);
}
/*************************************************************************
【函数名称】FixedClearPoint
【函数功能】清空点集合（无规则）
【参数】无
【返回值】无
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
void Element3D::FixedClearPoint() {
    m_Points.Clear();
}
/*************************************************************************
【函数名称】FixedCountPoint const
【函数功能】获取Element3D类的点数（无规则）
【参数】无
【返回值】size_t类型，表示Element3D类的点数
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
size_t Element3D::FixedCountPoint() const {
    return m_Points.CountElement();
}
//-------------------------------------------------------------------------
// 友元函数，重载流插入运算符
//-------------------------------------------------------------------------
/*************************************************************************
【函数名称】operator<<
【函数功能】重载流插入运算符，用于输出Element3D类的对象
【参数】ostream& out, 表示输出流
       const Element3D& AElement, 表示Element3D类的对象
【返回值】ostream类型，表示输出流
【开发者及日期】谭雯心 2024/8/5
【更改记录】
*************************************************************************/
ostream& operator<<(ostream& out, const Element3D& AElement) {
    out << "{";
    for (size_t i = 0; i < AElement.m_Points.CountElement(); i++) {
        out << AElement.m_Points[i];
        if (i < AElement.m_Points.CountElement() - 1) {
            out << ", ";
        }
    }
    out << "}";
    return out;
}
